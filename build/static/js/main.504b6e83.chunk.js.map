{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/person.js","App.js","index.js"],"names":["Filter","filterPeople","filterName","handleFilterNameChange","onSubmit","value","onChange","PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","type","Person","person","name","phone","Persons","persons","deletePerson","map","p","id","onClick","Notification","notificationSettings","message","isActive","className","baseUrl","axios","get","then","response","data","newObject","post","delete","App","useState","setPersons","setNewName","setNewNumber","setFilterName","notifSetting","setNotifSeting","useEffect","personServices","allPerson","activateNotification","setTimeout","event","preventDefault","results","filter","word","toUpperCase","includes","length","alert","target","returnPerson","console","log","concat","window","confirm","result","newArray","catch","error","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.504b6e83.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Filter({\r\n  filterPeople,\r\n  filterName,\r\n  handleFilterNameChange\r\n}) {\r\n  return (\r\n    <form onSubmit={filterPeople}>\r\n      filter shown with:{\" \"}\r\n      <input value={filterName} onChange={handleFilterNameChange} />\r\n      <button>Search</button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PersonForm({\r\n  addPerson,\r\n  newName,\r\n  handlePersonChange,\r\n  newNumber,\r\n  handleNumberChange\r\n}) {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handlePersonChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Person({ person }) {\r\n  return (\r\n    <p>\r\n      {person.name} | {person.phone}\r\n    </p>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Person from \"./Person\";\r\n\r\nexport default function Persons({ persons, deletePerson }) {\r\n  return (\r\n    <div>\r\n      {persons.map((p) => (\r\n        <div>\r\n          <Person key={p.id} person={p} />\r\n          <button onClick={() => deletePerson(p)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport './Notification.css';\r\n\r\nexport default function Notification({ notificationSettings }) {\r\n    const { type, message, isActive } = notificationSettings;\r\n\r\n    const activeStyle = isActive ? \"showme\" : \"hideme\";\r\n\r\n    return (\r\n        <div className={`notification ${type}`}>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n} \r\n\r\nexport default{\r\n    getAll,\r\n    create,\r\n    deletePerson,\r\n    updateNumber\r\n}","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nimport personServices from './services/person';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [notifSetting, setNotifSeting] = useState({ type: \"\", message: \"\", isActive: false });\n\n\n  // Get data from json server\n  useEffect(() => {\n    personServices.getAll()\n      .then(allPerson => {\n        setPersons(allPerson)\n      })\n  }, [])\n\n  // Prevent form from refreshing the page on Submit\n  // Update the persons array with the new name\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      phone: newNumber\n    };\n\n    personServices.create(personObject)\n      .then(returnPerson => {\n        console.log(\"Return Person\", returnPerson)\n        setPersons(persons.concat(returnPerson));\n      })\n\n    activateNotification(\"success\", `Added ${newName}`);\n    \n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  // Track the Name input on Change\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  // Check if name already exists\n  // should be ran before inserting to persons array\n  const checkIfExists = () => {\n    const found = persons.find((person) => person.name === newName);\n    if (found) {\n      return found;\n    }\n    return false;\n  };\n\n  // filter people\n  const filterPeople = (event) => {\n    event.preventDefault();\n    // Search for the name in the array\n    const results = persons.filter((word) =>\n      word.name.toUpperCase().includes(filterName.toUpperCase())\n    );\n    if (results.length > 0) {\n      setPersons(results);\n    } else {\n      alert(`${filterName} was not found.`);\n      setFilterName(\"\");\n    }\n  };\n\n  const handleFilterNameChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n\n  // Delete a person from database\n  const deletePerson = (p) => {\n    console.log(p.id);\n    if (window.confirm(`Delete ${p.name}`)) {\n      personServices\n        .deletePerson(p.id)\n        .then(result => {\n          let newArray = persons.filter(person => person.id !== p.id);\n          setPersons(newArray)\n        })\n        .catch(error => {\n          activateNotification(\"error\", `${p.name} has already been removed from server!`);\n        })\n\n      activateNotification(\"warning\", `${p.name} was deleted from server`);\n    }\n  }\n\n\n  // notification\n  const activateNotification = (type, message) => {\n    const notifObject = {\n      type: type,\n      message: message,\n      isActive: true\n    }\n    setNotifSeting(notifObject);\n\n    setTimeout(() => {\n      setNotifSeting({ type: \"\", message: \"\", isActive: false })\n    }, 2000)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Notification notificationSettings={notifSetting} />\n      <Filter\n        filterPeople={filterPeople}\n        filterName={filterName}\n        handleFilterNameChange={handleFilterNameChange}\n      />\n      <h2>Add New Number</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handlePersonChange={handlePersonChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}